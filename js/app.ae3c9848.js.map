{"version":3,"file":"js/app.ae3c9848.js","mappings":"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","sources":["webpack://testing1/./src/App.vue?dac9","webpack://testing1/./src/App.vue","webpack://testing1/./src/components/BabylonExamples.vue?f7a3","webpack://testing1/./src/components/BabylonExamples.vue","webpack://testing1/./src/Babylon/CustomLoadingScreen.ts","webpack://testing1/./src/Babylon/CustomLoading.ts","webpack://testing1/./src/Babylon/Quiz.ts","webpack://testing1/./src/components/BabylonExamples.vue?ce54","webpack://testing1/./src/App.vue?7ccd","webpack://testing1/./src/main.ts","webpack://testing1/webpack/bootstrap","webpack://testing1/webpack/runtime/chunk loaded","webpack://testing1/webpack/runtime/define property getters","webpack://testing1/webpack/runtime/global","webpack://testing1/webpack/runtime/hasOwnProperty shorthand","webpack://testing1/webpack/runtime/make namespace object","webpack://testing1/webpack/runtime/jsonp chunk loading","webpack://testing1/webpack/startup"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_BabylonExamples = _resolveComponent(\"BabylonExamples\")!\n\n  return (_openBlock(), _createBlock(_component_BabylonExamples))\n}","<template>\n  <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n  <BabylonExamples/>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport BabylonExamples from './components/BabylonExamples.vue';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    BabylonExamples\n  }\n});\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"main\", null, _cache[0] || (_cache[0] = [\n    _createStaticVNode(\"<div id=\\\"loader\\\" data-v-252e67ba><p data-v-252e67ba>Loading</p><div id=\\\"loadingContainer\\\" data-v-252e67ba><div id=\\\"loadingBar\\\" data-v-252e67ba></div></div><p id=\\\"percentLoaded\\\" data-v-252e67ba>0%</p></div><div id=\\\"interactionText\\\" data-v-252e67ba>Click E to read the chapter!</div><div id=\\\"characterInteractionText\\\" data-v-252e67ba>Click I to interact!</div><div id=\\\"storyOverlay\\\" data-v-252e67ba><div id=\\\"storyContent\\\" data-v-252e67ba></div><div id=\\\"bookNavigation\\\" data-v-252e67ba><button id=\\\"prevPageBtn\\\" data-v-252e67ba>Previous</button><button id=\\\"nextPageBtn\\\" data-v-252e67ba>Next</button></div></div><div id=\\\"characterOverlay\\\" class=\\\"character-overlay\\\" data-v-252e67ba><div id=\\\"characterSpeechContent\\\" class=\\\"speech-content\\\" data-v-252e67ba></div></div><div id=\\\"quizInteractionText\\\" data-v-252e67ba>Click Q to start the Quiz!</div><div id=\\\"quizOverlay\\\" class=\\\"quiz-overlay\\\" data-v-252e67ba><div id=\\\"quizContent\\\" class=\\\"quiz-content\\\" data-v-252e67ba><div id=\\\"questionText\\\" data-v-252e67ba></div><div id=\\\"answerOptions\\\" data-v-252e67ba><button class=\\\"answer-btn\\\" data-option=\\\"A\\\" data-v-252e67ba></button><button class=\\\"answer-btn\\\" data-option=\\\"B\\\" data-v-252e67ba></button><button class=\\\"answer-btn\\\" data-option=\\\"C\\\" data-v-252e67ba></button><button class=\\\"answer-btn\\\" data-option=\\\"D\\\" data-v-252e67ba></button></div><div id=\\\"feedbackText\\\" data-v-252e67ba></div><button id=\\\"nextQuestionBtn\\\" data-v-252e67ba>Next Question</button><button id=\\\"closeQuizBtn\\\" data-v-252e67ba>Close Quiz</button></div></div><h3 data-v-252e67ba>The Twilight</h3><canvas id=\\\"babylonCanvas\\\" data-v-252e67ba></canvas>\", 9)\n  ])))\n}","<template>\n  <main>\n    <!-- Loading Screen UI -->\n    <div id=\"loader\">\n      <p>Loading</p>\n      <div id=\"loadingContainer\">\n        <div id=\"loadingBar\"></div>\n      </div>\n      <p id=\"percentLoaded\">0%</p> <!-- Initial percentage -->\n    </div>\n      \n    <!-- Interaction Text UI (for the book) -->\n    <div id=\"interactionText\">Click E to read the chapter!</div>\n\n    <!-- Character Interaction Text UI -->\n    <div id=\"characterInteractionText\">Click I to interact!</div>\n\n    <!-- Story Overlay UI (for the book) -->\n    <div id=\"storyOverlay\">\n        <div id=\"storyContent\">\n            <!-- Story content will be dynamically set by CustomLoading.ts based on chapter -->\n            <!-- Initial content will be Chapter 1 -->\n        </div>\n        <!-- Book Navigation Buttons -->\n        <div id=\"bookNavigation\">\n            <button id=\"prevPageBtn\">Previous</button>\n            <button id=\"nextPageBtn\">Next</button>\n        </div>\n    </div>\n\n    <!-- Character Speech Overlay (like the book overlay, but for character dialogue) -->\n    <div id=\"characterOverlay\" class=\"character-overlay\">\n        <div id=\"characterSpeechContent\" class=\"speech-content\">\n            <!-- Speech content will be dynamically set by CustomLoading.ts -->\n        </div>\n    </div>\n\n    <!-- Quiz Interaction Text UI -->\n    <div id=\"quizInteractionText\">Click Q to start the Quiz!</div>\n\n    <!-- Quiz Overlay UI -->\n    <div id=\"quizOverlay\" class=\"quiz-overlay\">\n        <div id=\"quizContent\" class=\"quiz-content\">\n            <div id=\"questionText\"></div>\n            <div id=\"answerOptions\">\n                <button class=\"answer-btn\" data-option=\"A\"></button>\n                <button class=\"answer-btn\" data-option=\"B\"></button>\n                <button class=\"answer-btn\" data-option=\"C\"></button>\n                <button class=\"answer-btn\" data-option=\"D\"></button>\n            </div>\n            <div id=\"feedbackText\"></div>\n            <button id=\"nextQuestionBtn\">Next Question</button>\n            <button id=\"closeQuizBtn\">Close Quiz</button>\n        </div>\n    </div>\n\n    <!-- Main 3D Scene Elements -->\n    <h3>The Twilight</h3>\n    <canvas id=\"babylonCanvas\"></canvas> <!-- Added an ID to the canvas -->\n  </main>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { CustomLoading } from \"@/Babylon/CustomLoading\";\nimport { QuizGame } from \"@/Babylon/Quiz\";\nimport { Engine, Scene } from \"@babylonjs/core\"; // Only import Engine and Scene for type hints\n\nexport default defineComponent({\n  name: 'BabylonExamples',\n  data() {\n    return {\n      loaded: false,\n    };\n  },\n  mounted() {\n    const canvas = document.getElementById(\"babylonCanvas\") as HTMLCanvasElement;\n    const loadingBar = document.getElementById(\"loadingBar\") as HTMLElement;\n    const percentLoaded = document.getElementById(\"percentLoaded\") as HTMLElement;\n    const loader = document.getElementById(\"loader\") as HTMLElement;\n\n    // Existing book interaction UI elements\n    const interactionTextElement = document.getElementById(\"interactionText\") as HTMLElement;\n    const storyOverlay = document.getElementById(\"storyOverlay\") as HTMLElement;\n    const storyContent = document.getElementById(\"storyContent\") as HTMLElement;\n    const prevPageBtn = document.getElementById(\"prevPageBtn\") as HTMLButtonElement;\n    const nextPageBtn = document.getElementById(\"nextPageBtn\") as HTMLButtonElement;\n    // Existing character interaction UI elements\n    const characterInteractionTextElement = document.getElementById(\"characterInteractionText\") as HTMLElement;\n    const characterOverlayElement = document.getElementById(\"characterOverlay\") as HTMLElement;\n    const characterSpeechContentElement = document.getElementById(\"characterSpeechContent\") as HTMLElement;\n\n    // Quiz UI elements\n    const quizInteractionTextElement = document.getElementById(\"quizInteractionText\") as HTMLElement;\n    const quizOverlayElement = document.getElementById(\"quizOverlay\") as HTMLElement;\n    const quizContentElement = document.getElementById(\"quizContent\") as HTMLElement;\n    const answerButtons = Array.from(document.querySelectorAll(\"#answerOptions .answer-btn\")) as HTMLButtonElement[];\n    const feedbackTextElement = document.getElementById(\"feedbackText\") as HTMLElement;\n    const nextQuestionBtn = document.getElementById(\"nextQuestionBtn\") as HTMLButtonElement;\n    const closeQuizBtn = document.getElementById(\"closeQuizBtn\") as HTMLButtonElement;\n\n    // Ensure all critical elements are found\n    if (!canvas || !loadingBar || !percentLoaded || !loader || !interactionTextElement || !storyOverlay || !storyContent || !prevPageBtn || !nextPageBtn || !characterInteractionTextElement || !characterOverlayElement || !characterSpeechContentElement || !quizInteractionTextElement || !quizOverlayElement || !quizContentElement || answerButtons.length === 0 || !feedbackTextElement || !nextQuestionBtn || !closeQuizBtn) {\n      console.error(\"Critical HTML elements for Babylon.js or UI are missing!\");\n      return;\n    }\n\n    // Instantiate CustomLoading first. It will create its own engine and scene.\n    const customLoadingInstance = new CustomLoading(\n      canvas,\n      this.setLoaded,\n      loadingBar,\n      percentLoaded,\n      loader,\n      interactionTextElement,\n      storyOverlay,\n      storyContent,\n      prevPageBtn,\n      nextPageBtn,\n      characterInteractionTextElement,\n      characterOverlayElement,\n      characterSpeechContentElement\n    );\n\n    // After CustomLoading has initialized, get its public scene and engine.\n    const sharedScene = customLoadingInstance.scene;\n    const sharedEngine = customLoadingInstance.engine;\n\n    // Instantiate QuizGame, passing the shared scene and engine\n    const quizGameInstance = new QuizGame(\n        sharedScene,  // Pass the shared scene\n        sharedEngine, // Pass the shared engine\n        quizInteractionTextElement,\n        quizOverlayElement,\n        quizContentElement,\n        answerButtons,\n        feedbackTextElement,\n        nextQuestionBtn,\n        closeQuizBtn\n    );\n\n    // Start the render loop and handle resize for the overall engine\n    // This ensures only one render loop is running for the single engine.\n    sharedEngine.runRenderLoop(() => {\n        sharedScene.render();\n    });\n\n    window.addEventListener('resize', () => {\n        sharedEngine.resize();\n    });\n\n  },\n  methods: {\n    setLoaded() {\n      this.loaded = true;\n    },\n  },\n});\n</script>\n\n<style scoped>\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto+Condensed&family=Roboto:wght@100;700&display=swap\");\n\nmain {\n  width: 70%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n}\n\n/* Loading Screen Styles */\n#loader {\n  width: 100%;\n  height: 100%;\n  background: slategrey;\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  transition: opacity 1s ease;\n}\n\n#loaded {\n  opacity: 0;\n  pointer-events: none; /* Allow clicks through when faded */\n}\n\n#loadingContainer {\n  width: 30%;\n  height: 2rem;\n  background: rgba(255, 255, 255, 0.75);\n  border-radius: 6px;\n  margin: 0.5rem;\n}\n\n#loadingBar {\n  height: 100%;\n  background: green;\n  border-radius: 6px;\n  width: 0%; /* Ensure initial state */\n  transition: width 0.1s ease-out;\n}\n\np {\n  color: white;\n  background: none;\n  margin-bottom: 1rem;\n  font-family: \"Roboto Condensed\";\n  font-weight: 400;\n  font-size: 2rem;\n}\n\ncanvas {\n  width: 100%;\n  height: 100%;\n  border: none;\n  outline: none;\n  box-shadow: 8px 8px 10px -6px #000000;\n}\n\nh3 {\n    color: #FFF; /* Example color for the title */\n    margin-top: 20px; /* Space from top */\n    z-index: 5; /* Ensure it's above canvas but below loader/overlay */\n}\n\n/* --- Interaction Text (for Book) Styles --- */\n#interactionText {\n    position: absolute;\n    top: 10%; /* Adjust as needed */\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-family: sans-serif;\n    font-size: 1.2em;\n    display: none; /* Hidden by default */\n    z-index: 100;\n}\n\n/* --- Character Interaction Text Styles --- */\n#characterInteractionText {\n    position: absolute;\n    top: 20%; /* Slightly lower than book text to avoid overlap if both are near */\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-family: sans-serif;\n    font-size: 1.2em;\n    display: none; /* Hidden by default */\n    z-index: 100;\n}\n\n\n/* --- Story Overlay (for Book) Styles --- */\n#storyOverlay {\n    position: fixed; /* Use fixed to cover entire viewport */\n    top: 0;\n    left: 0;\n    width: 100vw; /* Cover full viewport width */\n    height: 100vh; /* Cover full viewport height */\n    background-color: rgba(0, 0, 0, 0.8); /* 80% black transparency */\n    display: flex;\n    flex-direction: column; /* Changed to column to stack content and buttons */\n    justify-content: center;\n    align-items: center;\n    z-index: 200; /* Higher than other UI */\n    opacity: 0; /* Hidden by default with fade */\n    visibility: hidden; /* Ensures it's not interactive when opacity is 0 */\n    transition: opacity 0.3s ease-in-out;\n}\n\n#storyContent {\n    color: white;\n    font-family: serif;\n    font-size: 1.1em;\n    max-width: 60%;\n    padding: 20px;\n    background-color: rgba(20, 20, 20, 0.9);\n    border-radius: 8px;\n    line-height: 1.6;\n    text-align: justify;\n    max-height: 70%; /* Give space for buttons */\n    overflow-y: auto; /* Enable scrolling */\n    box-shadow: 0 4px 15px rgba(0,0,0,0.5); /* Add some depth */\n    margin-bottom: 20px; /* Space between content and buttons */\n}\n\n/* Specific styles for story content elements within the overlay */\n#storyContent h3 {\n    font-family: \"Roboto Condensed\"; /* Example font */\n    font-size: 1.8em;\n    margin-bottom: 15px;\n    text-align: center;\n    color: #ADD8E6; /* Light blue for headings */\n}\n#storyContent p {\n    font-family: serif; /* Ensure paragraphs use serif font */\n    font-size: 1em;\n    margin-bottom: 10px;\n    line-height: 1.5;\n    color: #F0F0F0; /* Light gray for body text */\n}\n\n#bookNavigation {\n    display: flex;\n    gap: 20px; /* Space between buttons */\n    z-index: 201; /* Ensure buttons are above overlay */\n}\n\n#bookNavigation button {\n    padding: 10px 25px;\n    font-size: 1.1em;\n    font-family: \"Roboto Condensed\", sans-serif;\n    background-color: #007bff; /* Blue button */\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.2s ease, transform 0.1s ease;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n}\n\n#bookNavigation button:hover {\n    background-color: #0056b3;\n    transform: translateY(-2px);\n}\n\n#bookNavigation button:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n}\n\n#bookNavigation button:disabled {\n    background-color: #6c757d; /* Grey out disabled buttons */\n    cursor: not-allowed;\n    box-shadow: none;\n}\n\n/* --- Character Speech Overlay Styles (similar to storyOverlay) --- */\n#characterOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.8);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 200;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease-in-out;\n}\n\n.speech-content {\n    background-color: rgba(255, 255, 255, 0.95); /* Lighter background for speech bubble */\n    border-radius: 15px;\n    padding: 30px;\n    max-width: 700px; /* Wider for dialogue */\n    box-shadow: 0 8px 25px rgba(0,0,0,0.4);\n    color: #333;\n    font-family: 'Roboto', sans-serif; /* More readable font for dialogue */\n    font-size: 1.2em;\n    line-height: 1.6;\n    text-align: center; /* Center the text for a single dialogue bubble */\n    position: relative;\n}\n\n/* Optional: Add a subtle pointer/tail for the speech bubble */\n.speech-content::before {\n    content: '';\n    position: absolute;\n    top: 100%; /* Position at the bottom of the content box */\n    left: 50%;\n    border: 20px solid transparent;\n    border-top-color: rgba(255, 255, 255, 0.95); /* Match bubble background */\n    transform: translateX(-50%);\n    margin-top: -1px; /* Overlap slightly to avoid gap */\n}\n\n.speech-content p {\n    color: #333; /* Ensure text color is dark inside speech bubble */\n    margin: 0;\n    font-size: 1em;\n}\n\n/* --- Quiz Interaction Text Styles --- */\n#quizInteractionText {\n    position: absolute;\n    top: 30%; /* Adjust as needed */\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: rgba(0, 0, 0, 0.7);\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    font-family: sans-serif;\n    font-size: 1.2em;\n    display: none; /* Hidden by default */\n    z-index: 100;\n}\n\n/* --- Quiz Overlay Styles --- */\n#quizOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.9); /* Darker background for quiz */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 300; /* Higher than other overlays */\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.3s ease-in-out;\n}\n\n.quiz-content {\n    background-color: rgba(30, 30, 30, 0.95); /* Dark background for quiz content */\n    border-radius: 15px;\n    padding: 40px;\n    max-width: 800px;\n    box-shadow: 0 8px 30px rgba(0,0,0,0.6);\n    color: white;\n    font-family: 'Roboto', sans-serif;\n    text-align: center;\n}\n\n#questionText {\n    font-size: 1.8em;\n    margin-bottom: 30px;\n    color: #ADD8E6; /* Light blue */\n    font-weight: bold;\n}\n\n#answerOptions {\n    display: grid;\n    grid-template-columns: 1fr 1fr; /* Two columns for buttons */\n    gap: 20px;\n    margin-bottom: 30px;\n}\n\n.answer-btn {\n    padding: 15px 30px;\n    font-size: 1.2em;\n    background-color: #4CAF50; /* Green default */\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background-color 0.2s ease, transform 0.1s ease;\n    box-shadow: 0 4px 10px rgba(0,0,0,0.3);\n}\n\n.answer-btn:hover:not(:disabled) {\n    background-color: #45a049;\n    transform: translateY(-3px);\n}\n\n.answer-btn:active:not(:disabled) {\n    transform: translateY(0);\n    box-shadow: 0 2px 5px rgba(0,0,0,0.3);\n}\n\n.answer-btn:disabled {\n    background-color: #6c757d; /* Grey out disabled buttons */\n    cursor: not-allowed;\n    box-shadow: none;\n}\n\n.answer-btn.correct {\n    background-color: #28a745; /* Darker green for correct */\n}\n\n.answer-btn.incorrect {\n    background-color: #dc3545; /* Red for incorrect */\n}\n\n#feedbackText {\n    font-size: 1.4em;\n    margin-top: 20px;\n    min-height: 1.5em; /* Reserve space */\n    font-weight: bold;\n}\n\n#nextQuestionBtn, #closeQuizBtn {\n    padding: 12px 25px;\n    font-size: 1.1em;\n    margin-top: 20px;\n    margin-left: 10px;\n    margin-right: 10px;\n    background-color: #007bff; /* Blue */\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n}\n\n#nextQuestionBtn:hover, #closeQuizBtn:hover {\n    background-color: #0056b3;\n}\n</style>\n\n","import { ILoadingScreen } from \"@babylonjs/core\";\n\nexport class CustomLoadingScreen implements ILoadingScreen {\n    // These properties must be initialized, either here or in the constructor.\n    // Making them public as required by the interface.\n    public loadingUIBackgroundColor: string;\n    public loadingUIText: string;\n\n    constructor(\n        private loadingBar: HTMLElement,\n        private percentLoaded: HTMLElement,\n        private loader: HTMLElement\n    ) {\n        // Initialize the required properties in the constructor\n        this.loadingUIBackgroundColor = \"#111111\"; // Default background color\n        this.loadingUIText = \"Loading Scene...\"; // Default loading text\n    }\n\n    /**\n     * This function is called to display the loading screen.\n     */\n    displayLoadingUI(): void {\n        // Show the loader container\n        if (this.loader) {\n            this.loader.style.display = \"flex\"; // Assuming you want a flex container for centering\n            document.body.style.backgroundColor = this.loadingUIBackgroundColor;\n        }\n\n        // Reset progress bar to 0%\n        if (this.loadingBar) {\n            this.loadingBar.style.width = \"0%\";\n        }\n        if (this.percentLoaded) {\n            this.percentLoaded.innerText = \"0% loaded\";\n        }\n\n        console.log(\"Custom loading UI displayed.\");\n    }\n\n    /**\n     * This function is called to hide the loading screen.\n     */\n    hideLoadingUI(): void {\n        // Add a class for a fade-out animation if desired\n        // If you're using CSS transitions for the fade, you might add a class like 'fade-out'\n        // and then listen for 'transitionend' before setting display = 'none'.\n        // For simplicity, directly setting display to none after a timeout.\n        if (this.loader) {\n            // Optional: If you use CSS for a fade-out, you might add a class here\n            // this.loader.classList.add('fade-out');\n\n            // Setting ID to 'loaded' might be for CSS styling (e.g., #loaded { opacity: 0; transition: opacity 1s; })\n            this.loader.id = \"loaded\";\n\n            // Hide the loader after a delay (e.g., 1000ms for a smooth transition)\n            setTimeout(() => {\n                this.loader.style.display = \"none\";\n                // Optionally remove the 'loaded' ID or 'fade-out' class here\n                // this.loader.id = \"\"; // Or this.loader.classList.remove('fade-out');\n            }, 1000);\n        }\n        console.log(\"Custom loading UI hidden.\");\n    }\n\n    /**\n     * This method is called by Babylon.js to update loading progress.\n     * Note: Babylon.js usually passes a number (0-100) for status.\n     * It's safer to expect a number and convert to string for display.\n     */\n    updateLoadStatus(status: number): void {\n        const percent = Math.round(status); // Ensure it's a whole number percentage\n        if (this.loadingBar) {\n            this.loadingBar.style.width = `${percent}%`;\n        }\n        if (this.percentLoaded) {\n            this.percentLoaded.innerText = `${percent}% loaded`;\n        }\n    }\n}\n","import {\n    Scene,\n    Engine,\n    FreeCamera,\n    Vector3,\n    CubeTexture,\n    SceneLoader,\n    AbstractMesh,\n    GlowLayer,\n    Color3,\n    DirectionalLight,\n    PointLight,\n    SpotLight,\n    ShadowGenerator,\n    MeshBuilder,\n    PBRMaterial,\n    Texture,\n    HemisphericLight,\n    Mesh,\n    AnimationGroup\n} from \"@babylonjs/core\";\nimport \"@babylonjs/loaders\";\nimport { CustomLoadingScreen } from \"./CustomLoadingScreen\";\n\nexport class CustomLoading {\n    public scene!: Scene; // Now public\n    public engine!: Engine; // Now public\n\n    loadingScreen: CustomLoadingScreen;\n\n    lightTubes: AbstractMesh[] = [];\n    models: AbstractMesh[] = [];\n    bookMesh!: Mesh; // To store the loaded book mesh (book.glb)\n    book2Mesh!: Mesh; // New: To store the loaded book2 mesh (book2.glb)\n\n    // Character 1: Vampire\n    vampireMeshes: AbstractMesh[] = [];\n    vampireAnimationGroups: AnimationGroup[] = [];\n    private isPlayerNearVampire = false;\n    private vampireInteractionDistance = 2.0;\n    private vampireSpeech = `<p>Hey kid, I heard that there are many nocturnal creatures around here. Please be careful! Don't be like Bella Swan. Guess what she did to the 'Cullen' family?</p>`;\n\n    // Character 2: Werewolf\n    werewolfMeshes: AbstractMesh[] = [];\n    werewolfAnimationGroups: AnimationGroup[] = [];\n    private isPlayerNearWerewolf = false;\n    private werewolfInteractionDistance = 2.0; // Same as vampire for now, adjust as needed\n    private werewolfSpeech = `<p>Raawwwrrr! What can I help you? But hey don't be scared, we Uley Pack rarely bite. Right, <i>Jacob?</i></p>`;\n    \n    // UI elements for book interaction (shared for both books)\n    private interactionTextElement: HTMLElement; // For \"Click E to read!\" prompt\n    private overlayElement: HTMLElement;         // For book story overlay\n    private storyContentElement: HTMLElement;    // For book story content\n    private prevPageBtn: HTMLButtonElement;      // For book navigation\n    private nextPageBtn: HTMLButtonElement;      // For book navigation\n\n    // UI elements for character interaction (shared for both vampire and werewolf)\n    private characterInteractionTextElement: HTMLElement; // For generic \"Click I to interact!\" prompt\n    private characterOverlayElement: HTMLElement;         // For character speech overlay\n    private characterSpeechContentElement: HTMLElement;   // For character speech content\n\n    private isPlayerNearBook = false;\n    private isPlayerNearBook2 = false; // New: tracks if player is near book2\n    private isOverlayActive = false; // Tracks if EITHER book or character overlay is active\n\n    // Defined interaction distances\n    private bookInteractionDistance = 16.5;\n    private book2InteractionDistance = 5; // Same distance as first book\n    private cameraDefaultSpeed = 0.1;\n\n    // Story management properties (for the first book - book.glb)\n    private storyChapters_book1: string[] = [\n        `<h3>Twilight by Stephenie Meyer</h3>\n        <p>When seventeen-year-old Isabella Swan chooses to leave behind her life in sunny Phoenix, she expects little more than grey skies and quiet solitude in the small town of Forks, Washington. She moves in with her father, Charlie Swan, a local police chief, resigned to the idea of a mundane, uneventful existence in her new home. But Forks holds secrets. Dark, dense forests shroud the town in mystery, and the constant cloud cover seems to whisper of something hidden beneath the surface.</p>\n        <p> At Forks High School, Bella finds herself surrounded by unfamiliar faces, navigating the awkward terrain of being the new girl. Among her classmates, one group stands apart: the Cullens. Impossibly beautiful, pale, and distant, the Cullen family appears untouched by the ordinary world around them. Edward Cullen, in particular, intrigues Bella in ways she can’t explain, both drawn to and confounded by him. Edward is unlike anyone she has ever met. He’s intelligent, graceful, and eerily perceptive, but his behavior is confusing and, at times, contradictory.</p>\n        <p>One moment, he’s cold and distant; the next, he’s saving her from danger with impossible strength and speed. As Bella becomes more entwined with Edward’s world, she senses that he is hiding something, something bigger than she can imagine. Her curiosity grows, and with it, so does her connection to him, despite the warnings in his eyes and the unspoken tension that surrounds him. Forks begins to feel less ordinary, and Bella starts to unravel truths that challenge everything she thought she knew about the world. </p>\n        <p>Her once-predictable life turns into something far more dangerous and far more exhilarating than she could have imagined. Amidst the towering pines and overcast skies, a romance begins to bloom. But it’s a romance unlike any other, defined by secrets, restraint, and a pull that neither of them can deny.</p>`,\n        `<h3>New Moon by Stephenie Meyer</h3>\n        <p>Time passes in Forks, but the air still carries the same chill, the same veiled tension that settled when Bella Swan first stepped into this quiet, rain-drenched town. As her eighteenth birthday approaches, Bella is more aware than ever of time slipping through her fingers, time that feels like it's racing ahead, especially when measured against the eternal stillness of someone she loves. The Cullen family, still shrouded in mystery and grace, has become a central part of Bella’s world.</p>\n        <p>Their presence is at once comforting and precarious, like walking a tightrope between dreams and danger. Edward Cullen remains both her anchor and her most complex uncertainty. But just as Bella begins to believe she might have found a place where she belongs, an unexpected event shatters the delicate balance between their worlds. A single moment threatens to unravel everything, forcing decisions that cut deep and leave invisible wounds.</p>\n        <p>With her life upended, Bella is thrust into an emotional void, struggling to navigate a world suddenly devoid of the light that once guided her. Her days blur together, each one a mirror of the last, steeped in silence and shadow. The pull of memory, once beautiful, becomes a haunting echo. But healing has strange ways of finding us. In the quiet company of Jacob Black, a childhood friend from the nearby Quileute reservation, Bella finds warmth again. His easy smile and steady presence begin to mend what was broken, though he, too, harbors secrets waiting to rise with the moon.</p>\n        <p>As their friendship deepens, Bella discovers that danger has not faded, it has only changed shape. The supernatural world that once seemed centered around one truth begins to reveal its many layers, each more mysterious than the last. Forks is no longer just the home of vampires, it’s something more ancient, more deeply rooted. Old legends begin to breathe life into modern days. Bella finds herself at a crossroads between loyalty and destiny, between what she’s lost and what she might become. The line between friend and foe begins to blur, and choices must be made with the weight of entire lives resting on them.</p>`,\n        `<h3>Eclipse by Stephenie Meyer</h3>\n        <p>Tension blankets Forks like its ever-present mist. Bella Swan finds herself caught in the middle of forces greater than herself, deeper than the sea, and older than the legends whispered around campfires. With high school nearing its end and decisions looming, Bella stands at the edge of more than just adulthood, she stands at the brink of transformation. Her love for Edward Cullen is unwavering, a flame that has endured storms and silence. But love, as Bella learns, is rarely simple.</p>\n        <p> It comes with consequences, with expectations, and with the sharp realization that choosing one path often means giving up another. The stakes have never been higher, not just for her heart, but for her very soul. The peace between vampire and werewolf is fragile, an uneasy truce built on shared interests, not trust. Jacob Black remains a steadfast figure in Bella’s life, one whose warmth and honesty challenge her convictions and force her to re-examine what love truly means. His world, wild and ancient, pulls at her in ways she never anticipated.</p>\n        <p> Meanwhile, shadows stir in the distance. A series of mysterious killings plague the nearby city of Seattle, hinting at something far more sinister than random violence. The Cullen family begins to suspect a darker plan unfolding, one that may have everything to do with Bella and her future. The hunter is becoming the hunted once more. With danger circling closer, Bella must navigate a tangle of choices: the man she loves, the friend she cannot abandon, and the destiny that waits silently beneath it all. Her heart is torn between fire and ice, between the eternal calm of one and the untamed heat of the other.</p>\n        <p> The alliances that form in Eclipse are as unlikely as they are vital. In order to survive, old enemies must lay down arms, if only for a moment. Trust becomes a gamble, and loyalty is tested in ways no one expects. Every decision Bella makes will ripple across not just her life, but the lives of everyone she holds dear. As battles brew and hearts waver, Bella wrestles with her identity. Is she ready to give up everything human about herself? What does it truly mean to belong, to a world, to a person, to a future?</p>\n        <p> In the twilight between peace and war, Bella stands as a bridge, and a battleground, for two worlds that were never meant to coexist.</p>`\n    ];\n\n    // Story management properties (for the second book - book2.glb)\n    private storyChapters_book2: string[] = [\n        `<h3>Breaking Dawn 1 by Stephenie Meyer</h3>\n        <p>The sun sets on Bella Swan’s final days as a human girl caught between two worlds, one of fire and blood, the other of ice and eternity. Her love for Edward Cullen has burned brighter than any mortal bond should allow, and now, at the edge of a great and irreversible choice, Bella steps into a life-altering decision that will seal her fate forever.</p>\n        <p> A long-anticipated union marks the beginning of Bella’s transformation, not just of her future, but of her very existence. In a ceremony that blends elegance with emotion, Bella and Edward promise themselves to each other, transcending the doubts and fears that once haunted them. But their blissful beginning soon gives way to uncertainty when the consequences of their love reveal themselves in unexpected, mysterious ways.</p>\n        <p>As they retreat into a secluded paradise, far from the skeptical eyes of Forks, the sanctuary of their honeymoon is quickly overshadowed by a strange and impossible development, one that neither vampire lore nor human science can explain. Bella’s body begins to betray her, changing faster than anyone could prepare for, and the life growing within her challenges everything they thought they understood.</p>\n        <p>Tensions rise within the Cullen family, testing even the strongest bonds. Some see Bella’s choice as reckless, others as brave. Meanwhile, Jacob Black, now more than ever, finds himself divided between loyalty, fury, and a growing understanding that his path may not be what he once believed.</p>`,\n        `<h3>Breaking Dawn 1 by Stephenie Meyer</h3>\n        <p>Outside the Cullen house, old rivalries stir. The wolves grow restless, divided by duty and compassion. Secrets surface within their ranks, and choices must be made that will echo for generations to come. Bella, caught in the middle of it all, faces pain and transformation beyond comprehension. Yet through it all, Bella holds fast to her love, unshaken, unwavering, even as her heart and body fracture under the weight of change. The fragile line between life and death, love and sacrifice, becomes nearly invisible. And just when everything seems to settle, a newborn silence descends, the kind that only comes before a storm.</p>\n        <p>In her darkest hour, Bella is reborn, not merely changed, but awakened. The world she once viewed through human eyes now glows with immortal clarity. But with this new sight comes a new danger, one far greater than anything they’ve faced before.</p>\n        <p>As whispers reach the powerful Volturi in Italy, the ancient rulers of the vampire world, Bella and Edward’s family find themselves standing on a precipice once again, this time not just as lovers, but as protectors. The choices they made in Breaking Dawn Part 1 will summon a reckoning no one can ignore.</p>\n        <p>And so, Breaking Dawn Part 2 awaits, where allegiances will be tested, truths will be revealed, and the strength of love will determine the fate of more than just one family.</p>`\n    ];\n\n    private currentChapterIndex_book1 = 0; // Current chapter index for book.glb\n    private currentChapterIndex_book2 = 0; // New: Current chapter index for book2.glb\n\n    private activeStoryChapters: string[] = []; // Reference to the currently displayed story array\n    private activeChapterIndex = 0;    // Index for the currently displayed story\n    private currentActiveBook: 'book1' | 'book2' | null = null; // To track which book's story is currently open\n\n    constructor(\n        private canvas: HTMLCanvasElement,\n        private setLoaded: () => void,\n        private loadingBar: HTMLElement,\n        private percentLoaded: HTMLElement,\n        private loader: HTMLElement,\n        // UI elements for book interaction\n        interactionTextElement: HTMLElement,\n        overlayElement: HTMLElement,\n        storyContentElement: HTMLElement,\n        prevPageBtn: HTMLButtonElement,\n        nextPageBtn: HTMLButtonElement,\n        // UI elements for character interaction\n        characterInteractionTextElement: HTMLElement,\n        characterOverlayElement: HTMLElement,\n        characterSpeechContentElement: HTMLElement\n    ) {\n        // CustomLoading is responsible for its own engine and scene\n        this.engine = new Engine(this.canvas, true);\n        this.scene = this.CreateScene();\n        this.cameraDefaultSpeed = (this.scene.activeCamera as FreeCamera).speed;\n\n        this.loadingScreen = new CustomLoadingScreen(\n            this.loadingBar,\n            this.percentLoaded,\n            this.loader\n        );\n\n        this.engine.loadingScreen = this.loadingScreen;\n        this.engine.displayLoadingUI();\n        \n        // Assign passed UI elements to class properties\n        this.interactionTextElement = interactionTextElement;\n        this.overlayElement = overlayElement;\n        this.storyContentElement = storyContentElement;\n        this.prevPageBtn = prevPageBtn;\n        this.nextPageBtn = nextPageBtn;\n        this.characterInteractionTextElement = characterInteractionTextElement;\n        this.characterOverlayElement = characterOverlayElement;\n        this.characterSpeechContentElement = characterSpeechContentElement;\n\n        // Setup UI elements (their initial display state) and key event listeners\n        this.setupGameUI();\n        document.addEventListener('keydown', this.handleKeyPress.bind(this));\n        // Attach click listeners for navigation buttons (book)\n        this.prevPageBtn.addEventListener('click', () => this.prevPage());\n        this.nextPageBtn.addEventListener('click', () => this.nextPage());\n\n        this.CreateEnvironment().finally(() => {\n            this.engine.hideLoadingUI();\n            this.setLoaded();\n            this.setupGameLogic();\n        }).catch(error => {\n            console.error(\"Error during scene creation/loading:\", error);\n            this.engine.hideLoadingUI();\n            this.setLoaded();\n        });\n\n        // Render loop and resize listener are managed by BabylonExamples.vue now.\n        // The CustomLoading instance will *not* start its own render loop or resize listener.\n    }\n\n    /**\n     * Creates the main Babylon.js scene and camera.\n     * @returns {Scene} The created scene.\n     */\n    CreateScene(): Scene {\n        const scene = new Scene(this.engine);\n        const camera = new FreeCamera(\"camera\", new Vector3(0, 1, -5), scene);\n        camera.attachControl(this.canvas, true);\n        camera.speed = 0.1;\n\n        const envTex = CubeTexture.CreateFromPrefilteredData(\"./environment/sky.env\", scene);\n        scene.environmentTexture = envTex;\n        scene.createDefaultSkybox(envTex, true);\n        scene.environmentIntensity = 0.2;\n\n        return scene;\n    }\n\n    /**\n     * Creates a PBR material for the ground.\n     * @returns {PBRMaterial} The created PBR material.\n     */\n    CreateGrass(): PBRMaterial {\n        const pbr = new PBRMaterial(\"pbr\", this.scene);\n        const albedoTexture = new Texture(\"./textures/grass/coast_sand_rocks_02_diff_1k.jpg\", this.scene);\n        albedoTexture.uScale = 7;\n        albedoTexture.vScale = 7;\n        pbr.albedoTexture = albedoTexture;\n        const bumpTexture = new Texture(\"./textures/grass/coast_sand_rocks_02_nor_gl_1k.jpg\", this.scene);\n        bumpTexture.uScale = 7;\n        bumpTexture.vScale = 7;\n        pbr.bumpTexture = bumpTexture;\n        pbr.invertNormalMapX = true;\n        pbr.invertNormalMapY = true;\n        pbr.useAmbientOcclusionFromMetallicTextureRed = true;\n        pbr.useRoughnessFromMetallicTextureGreen = true;\n        pbr.useMetallnessFromMetallicTextureBlue = true;\n        pbr.roughness = 0.5;\n        return pbr;\n    }\n\n    /**\n     * Creates the ground mesh and applies the grass material.\n     * @returns {void}\n     */\n    CreateGround(): void {\n        const ground = MeshBuilder.CreateGround(\"ground\",\n            { width: 40, height: 40 },\n            this.scene\n        );\n        ground.material = this.CreateGrass();\n    }\n\n    /**\n     * Loads the rock_lod2.glb model into the scene.\n     * @returns {Promise<void>}\n     */\n    async CreateRock(): Promise<void> {\n        try {\n            const { meshes } = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"rock_lod2.glb\",\n                this.scene\n            );\n            console.log(\"Loaded rock_lod2.glb meshes:\", meshes);\n            if (meshes.length > 0 && meshes[0] instanceof Mesh) {\n                meshes[0].position = new Vector3(0, 0, 0.5);\n                meshes[0].scaling = new Vector3(0.5, 0.5, 0.5);\n            }\n        } catch (error) {\n            console.error(\"Error loading rock_lod2.glb:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Loads the envi4.glb model (level design) into the scene.\n     * @returns {Promise<void>}\n     */\n    async CreateLevelDesign(): Promise<void> {\n        try {\n            const result = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"envi4.glb\",\n                this.scene\n            );\n            this.models = result.meshes;\n            console.log(\"Loaded envi4.glb models:\", this.models);\n\n            if (this.models.length > 1 && this.models[1] instanceof Mesh) {\n                this.models[1].position = new Vector3(0, -5, 0);\n            }\n        } catch (error) {\n            console.error(\"Error loading envi4.glb:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Loads the book.glb model into the scene for gamification.\n     * @returns {Promise<void>}\n     */\n    async CreateBook(): Promise<void> {\n        try {\n            const result = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"book.glb\",\n                this.scene\n            );\n            this.bookMesh = result.meshes[0] as Mesh;\n            this.bookMesh.position = new Vector3(5, -11, 16);\n            this.bookMesh.scaling = new Vector3(0.2, 0.2, 0.2);\n            this.bookMesh.rotation = new Vector3(5.5, 0.2, 0.0);\n            console.log(\"Loaded book.glb:\", this.bookMesh.name);\n        } catch (error) {\n            console.error(\"Error loading book.glb:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * New: Loads the book2.glb model into the scene.\n     * @returns {Promise<void>}\n     */\n    async CreateBook2(): Promise<void> {\n        try {\n            const result = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"book2.glb\", // Assuming this is the correct filename\n                this.scene\n            );\n            this.book2Mesh = result.meshes[0] as Mesh;\n            // Set a distinct position, scaling, and rotation for book2\n            this.book2Mesh.position = new Vector3(-9, 1, 7); // Example new position\n            this.book2Mesh.scaling = new Vector3(0.2, 0.2, 0.2); // Same scaling as book.glb\n            this.book2Mesh.rotation = new Vector3(5,8.9,3); // Slightly different rotation\n            console.log(\"Loaded book2.glb:\", this.book2Mesh.name);\n        } catch (error) {\n            console.error(\"Error loading book2.glb:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Loads the vampire character model with its animations.\n     * @returns {Promise<void>}\n     */\n    async CreateVampire(): Promise<void> {\n        try {\n            const { meshes, animationGroups } = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"vampire1.glb\",\n                this.scene\n            );\n\n            this.vampireMeshes = meshes;\n            this.vampireAnimationGroups = animationGroups;\n\n            if (meshes.length > 0) {\n                meshes[0].rotation = new Vector3(0,4.5,0);\n                meshes[0].position = new Vector3(5, 0, 4);\n                meshes[0].scaling = new Vector3(0.5, 0.5, 0.5);\n            }\n\n            if (animationGroups.length > 0) {\n                console.log(\"Vampire animation groups:\", animationGroups);\n                animationGroups[0].play(true);\n            } else {\n                console.warn(\"No animation groups found for vampire.\");\n            }\n            console.log(\"Vampire model loaded successfully!\");\n\n        } catch (error) {\n            console.error(\"Error loading vampire model:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Loads the werewolf character model with its animations.\n     * @returns {Promise<void>}\n     */\n    async CreateWerewolf(): Promise<void> {\n        try {\n            const { meshes, animationGroups } = await SceneLoader.ImportMeshAsync(\n                \"\",\n                \"./models/\",\n                \"werewolf.glb\", // Assuming this is the correct filename\n                this.scene\n            );\n\n            this.werewolfMeshes = meshes;\n            this.werewolfAnimationGroups = animationGroups;\n\n            if (meshes.length > 0) {\n                // Position the werewolf differently from the vampire\n                meshes[0].rotation = new Vector3(0, 2.0, 0); // Example rotation\n                meshes[0].position = new Vector3(-7, 0, -5); // Example position\n                meshes[0].scaling = new Vector3(0.008, 0.008, 0.008); // Adjust scaling as needed\n            }\n\n            if (animationGroups.length > 0) {\n                console.log(\"Werewolf animation groups:\", animationGroups);\n                // Play a default animation if available\n                if (animationGroups[0]) {\n                    animationGroups[0].play(true);\n                }\n            } else {\n                console.warn(\"No animation groups found for werewolf.\");\n            }\n            console.log(\"Werewolf model loaded successfully!\");\n\n        } catch (error) {\n            console.error(\"Error loading werewolf model:\", error);\n            throw error;\n        }\n    }\n\n    /**\n     * Orchestrates the creation of the environment, including ground, models, and lights.\n     */\n    public async CreateEnvironment(): Promise<void> {\n        this.CreateGround();\n        this.loadingScreen.updateLoadStatus(10);\n\n        await this.CreateRock();\n        this.loadingScreen.updateLoadStatus(20); // Adjusted progress\n\n        await this.CreateLevelDesign();\n        this.loadingScreen.updateLoadStatus(35); // Adjusted progress\n\n        await this.CreateBook();\n        this.loadingScreen.updateLoadStatus(50); // Adjusted progress\n\n        await this.CreateBook2(); // New: Load the second book\n        this.loadingScreen.updateLoadStatus(65); // Adjusted progress\n\n        await this.CreateVampire(); // Load the vampire\n        this.loadingScreen.updateLoadStatus(80); // Adjusted progress\n\n        await this.CreateWerewolf(); // Load the werewolf\n        this.loadingScreen.updateLoadStatus(90); // Adjusted progress\n\n        this.CreateEnvironmentalLight();\n        this.loadingScreen.updateLoadStatus(95);\n\n        this.loadingScreen.updateLoadStatus(100);\n        console.log(\"All environment and models loaded.\");\n    }\n\n    async CreateEnvironmentalLight(): Promise<void> {\n        const glowLayer = new GlowLayer(\"glowLayer\", this.scene);\n        glowLayer.intensity = 0.75;\n\n        this.CreateLights();\n    }\n\n    /**\n     * Creates and configures various lights in the scene.\n     * @returns {void}\n     */\n    CreateLights(): void {\n        const hemiLight = new HemisphericLight(\n            \"hemiLight_CustomLoading\",\n            new Vector3(1, 1, 0),\n            this.scene\n        );\n        hemiLight.diffuse = new Color3(0.2, 0, 0);\n        hemiLight.groundColor = new Color3(0, 0, 0.1);\n        hemiLight.specular = new Color3(0, 0.1, 0);\n\n        const directionalLight = new DirectionalLight(\n            \"directionalLight\",\n            new Vector3(0, -1, 0),\n            this.scene\n        );\n        // Removed: 'directionalLight' is assigned a value but never used\n\n        const pointLight = new PointLight(\n            \"pointLight\",\n            new Vector3(0, 1, -1),\n            this.scene\n        );\n        pointLight.diffuse = new Color3(172 / 255, 246 / 255, 250 / 255);\n        pointLight.intensity = 0.25;\n\n        const pointClone = pointLight.clone(\"pointClone\") as PointLight;\n        pointClone.position = new Vector3(0, 1, 1);\n\n        const spotLight = new SpotLight(\n            \"spotLight\",\n            new Vector3(0, 0.5, -3),\n            new Vector3(0, 1, 3),\n            Math.PI / 2,\n            10,\n            this.scene\n        );\n        spotLight.intensity = 100;\n        spotLight.shadowEnabled = true;\n        spotLight.shadowMinZ = 1;\n        spotLight.shadowMaxZ = 10;\n\n        const shadowGen = new ShadowGenerator(2048, spotLight);\n        shadowGen.useBlurCloseExponentialShadowMap = true;\n\n        if (this.models && this.models.length > 0) {\n            this.models.forEach((mesh) => {\n                if (mesh instanceof Mesh) {\n                    mesh.receiveShadows = true;\n                    shadowGen.addShadowCaster(mesh);\n                }\n            });\n        }\n        // Add shadow casters for vampire meshes\n        if (this.vampireMeshes && this.vampireMeshes.length > 0) {\n            this.vampireMeshes.forEach((mesh) => {\n                if (mesh instanceof Mesh) {\n                    mesh.receiveShadows = true;\n                    shadowGen.addShadowCaster(mesh);\n                }\n            });\n        }\n        // Add shadow casters for werewolf meshes\n        if (this.werewolfMeshes && this.werewolfMeshes.length > 0) {\n            this.werewolfMeshes.forEach((mesh) => {\n                if (mesh instanceof Mesh) {\n                    mesh.receiveShadows = true;\n                    shadowGen.addShadowCaster(mesh);\n                }\n            });\n        }\n        // New: Add shadow casters for book2 mesh\n        if (this.book2Mesh) {\n            if (this.book2Mesh instanceof Mesh) {\n                this.book2Mesh.receiveShadows = true;\n                shadowGen.addShadowCaster(this.book2Mesh);\n            }\n        }\n    }\n\n    /**\n     * Sets up the HTML UI elements for interaction and story overlay.\n     */\n    private setupGameUI(): void {\n        this.interactionTextElement.style.display = 'none';\n        this.overlayElement.style.visibility = 'hidden';\n        this.overlayElement.style.opacity = '0';\n        this.prevPageBtn.style.display = 'none';\n        this.nextPageBtn.style.display = 'none';\n        \n        // Hide character interaction and overlay elements initially\n        this.characterInteractionTextElement.style.display = 'none';\n        this.characterOverlayElement.style.visibility = 'hidden';\n        this.characterOverlayElement.style.opacity = '0';\n        \n        // Initial setup for the active story (default to book 1)\n        this.activeStoryChapters = this.storyChapters_book1;\n        this.activeChapterIndex = this.currentChapterIndex_book1;\n        this.updateStoryContent();\n    }\n\n    /**\n     * Updates the story content in the overlay based on currently active story and index.\n     * Enables/disables navigation buttons.\n     */\n    private updateStoryContent(): void {\n        if (this.activeStoryChapters.length === 0) {\n            this.storyContentElement.innerHTML = \"<p>No story content available.</p>\";\n            this.prevPageBtn.disabled = true;\n            this.nextPageBtn.disabled = true;\n            return;\n        }\n\n        this.storyContentElement.innerHTML = this.activeStoryChapters[this.activeChapterIndex];\n        \n        this.prevPageBtn.disabled = this.activeChapterIndex === 0;\n        this.nextPageBtn.disabled = this.activeChapterIndex === this.activeStoryChapters.length - 1;\n    }\n\n    /**\n     * Moves to the next chapter/page of the active story.\n     */\n    private nextPage(): void {\n        if (this.activeChapterIndex < this.activeStoryChapters.length - 1) {\n            this.activeChapterIndex++;\n            this.updateStoryContent();\n        }\n    }\n\n    /**\n     * Moves to the previous chapter/page of the active story.\n     */\n    private prevPage(): void {\n        if (this.activeChapterIndex > 0) {\n            this.activeChapterIndex--;\n            this.updateStoryContent();\n        }\n    }\n\n\n    /**\n     * Sets up the game logic loop for player-book and player-character interaction.\n     */\n    private setupGameLogic(): void {\n        this.scene.onBeforeRenderObservable.add(() => {\n            if (!this.bookMesh || !this.book2Mesh || !this.scene.activeCamera || this.vampireMeshes.length === 0 || this.werewolfMeshes.length === 0) {\n                return;\n            }\n\n            const cameraPosition = this.scene.activeCamera.position;\n\n            // --- Book Interaction Logic ---\n            const distanceToBook1 = Vector3.Distance(cameraPosition, this.bookMesh.position);\n            const distanceToBook2 = Vector3.Distance(cameraPosition, this.book2Mesh.position); // New: distance to book2\n\n            this.isPlayerNearBook = distanceToBook1 < this.bookInteractionDistance;\n            this.isPlayerNearBook2 = distanceToBook2 < this.book2InteractionDistance; // New: check proximity for book2\n\n            // Only show book interaction text if no overlay is active\n            if (!this.isOverlayActive) {\n                if (this.isPlayerNearBook && this.isPlayerNearBook2) {\n                    // Both books are near, show prompt for the closer one\n                    if (distanceToBook1 < distanceToBook2) {\n                        this.interactionTextElement.style.display = 'block';\n                        this.interactionTextElement.textContent = \"Click E to read the first book!\";\n                    } else {\n                        this.interactionTextElement.style.display = 'block';\n                        this.interactionTextElement.textContent = \"Click E to read the second book!\";\n                    }\n                } else if (this.isPlayerNearBook) {\n                    this.interactionTextElement.style.display = 'block';\n                    this.interactionTextElement.textContent = \"Click E to read the chapter!\";\n                } else if (this.isPlayerNearBook2) { // New: if only book2 is near\n                    this.interactionTextElement.style.display = 'block';\n                    this.interactionTextElement.textContent = \"Click E to read the chapter!\";\n                }\n                else {\n                    this.interactionTextElement.style.display = 'none';\n                }\n            } else {\n                // If any overlay is active, hide the interaction text\n                this.interactionTextElement.style.display = 'none';\n            }\n\n\n            // --- Character Interaction Logic (Vampire and Werewolf) ---\n            const vampireRootMesh = this.vampireMeshes[0];\n            const werewolfRootMesh = this.werewolfMeshes[0];\n\n            const distanceToVampire = Vector3.Distance(cameraPosition, vampireRootMesh.position);\n            const distanceToWerewolf = Vector3.Distance(cameraPosition, werewolfRootMesh.position);\n\n            this.isPlayerNearVampire = distanceToVampire < this.vampireInteractionDistance;\n            this.isPlayerNearWerewolf = distanceToWerewolf < this.werewolfInteractionDistance;\n\n            // Determine which character is currently interactable and display the prompt\n            if (!this.isOverlayActive) {\n                if (this.isPlayerNearVampire && this.isPlayerNearWerewolf) {\n                    // Both are near, show prompt for the closer one\n                    if (distanceToVampire < distanceToWerewolf) {\n                        this.characterInteractionTextElement.style.display = 'block';\n                        this.characterInteractionTextElement.textContent = \"Click I to interact with Vampire!\";\n                    } else {\n                        this.characterInteractionTextElement.style.display = 'block';\n                        this.characterInteractionTextElement.textContent = \"Click I to interact with Werewolf!\";\n                    }\n                } else if (this.isPlayerNearVampire) {\n                    this.characterInteractionTextElement.style.display = 'block';\n                    this.characterInteractionTextElement.textContent = \"Click I to interact with Vampire!\";\n                } else if (this.isPlayerNearWerewolf) {\n                    this.characterInteractionTextElement.style.display = 'block';\n                    this.characterInteractionTextElement.textContent = \"Click I to interact with Werewolf!\";\n                } else {\n                    this.characterInteractionTextElement.style.display = 'none';\n                }\n            } else {\n                // Hide character interaction text if any overlay is active\n                this.characterInteractionTextElement.style.display = 'none';\n            }\n        });\n    }\n\n    /**\n     * Handles global key press events for game interactions.\n     * @param {KeyboardEvent} event The keyboard event.\n     */\n    private handleKeyPress(event: KeyboardEvent): void {\n        // Handle closing any active overlay first\n        if (event.key === 'Escape') {\n            if (this.isOverlayActive) {\n                this.hideStoryOverlay(); // Hides book overlay if active\n                this.hideCharacterOverlay(); // Hides character overlay if active\n                event.preventDefault();\n            }\n            return; // Prevent further processing if escape is pressed\n        }\n\n        // Book interaction (for either book1 or book2)\n        if (!this.isOverlayActive) {\n            if (event.key === 'e' || event.key === 'E') {\n                if (this.isPlayerNearBook) {\n                    this.showStoryOverlay('book1');\n                    event.preventDefault();\n                } else if (this.isPlayerNearBook2) { // New: interact with book2\n                    this.showStoryOverlay('book2');\n                    event.preventDefault();\n                }\n            }\n        }\n\n        // Character interaction\n        if (!this.isOverlayActive && (this.isPlayerNearVampire || this.isPlayerNearWerewolf)) {\n            if (event.key === 'i' || event.key === 'I') {\n                // Determine which character to interact with based on proximity\n                const cameraPosition = this.scene.activeCamera!.position;\n                const distanceToVampire = this.vampireMeshes.length > 0 ? Vector3.Distance(cameraPosition, this.vampireMeshes[0].position) : Infinity;\n                const distanceToWerewolf = this.werewolfMeshes.length > 0 ? Vector3.Distance(cameraPosition, this.werewolfMeshes[0].position) : Infinity;\n\n                if (this.isPlayerNearVampire && this.isPlayerNearWerewolf) {\n                    // Both are near, interact with the closer one\n                    if (distanceToVampire < distanceToWerewolf) {\n                        this.showCharacterOverlay(this.vampireSpeech);\n                    } else {\n                        this.showCharacterOverlay(this.werewolfSpeech);\n                    }\n                } else if (this.isPlayerNearVampire) {\n                    this.showCharacterOverlay(this.vampireSpeech);\n                } else if (this.isPlayerNearWerewolf) {\n                    this.showCharacterOverlay(this.werewolfSpeech);\n                }\n                event.preventDefault();\n            }\n        }\n        \n        // Allow left/right arrow keys for book navigation ONLY IF book overlay is active\n        // These now operate on the `activeStoryChapters` and `activeChapterIndex`\n        if (this.isOverlayActive && this.overlayElement.style.visibility === 'visible') {\n            if (event.key === 'ArrowLeft') {\n                this.prevPage();\n                event.preventDefault();\n            } else if (event.key === 'ArrowRight') {\n                this.nextPage();\n                event.preventDefault();\n            }\n        }\n    }\n\n    /**\n     * Displays the story overlay (for the book) and disables camera controls.\n     * @param bookId Specifies which book's story to load ('book1' or 'book2').\n     */\n    private showStoryOverlay(bookId: 'book1' | 'book2'): void {\n        if (!this.overlayElement || !this.scene.activeCamera) return;\n\n        this.isOverlayActive = true;\n        this.currentActiveBook = bookId; // Set the currently active book\n\n        // Load the appropriate story chapters and index based on bookId\n        if (bookId === 'book1') {\n            this.activeStoryChapters = this.storyChapters_book1;\n            this.activeChapterIndex = this.currentChapterIndex_book1;\n        } else if (bookId === 'book2') {\n            this.activeStoryChapters = this.storyChapters_book2;\n            this.activeChapterIndex = this.currentChapterIndex_book2;\n        }\n\n        this.overlayElement.style.visibility = 'visible';\n        this.overlayElement.style.opacity = '1';\n        this.interactionTextElement.style.display = 'none'; // Hide book interaction text\n        this.characterInteractionTextElement.style.display = 'none'; // Hide character interaction text\n        this.characterOverlayElement.style.visibility = 'hidden'; // Ensure character overlay is hidden\n        this.characterOverlayElement.style.opacity = '0';\n\n        // Show navigation buttons for the book\n        this.prevPageBtn.style.display = 'block';\n        this.nextPageBtn.style.display = 'block';\n        this.updateStoryContent(); // Ensure current chapter is displayed and buttons are correct\n\n        // Disable camera controls\n        this.scene.activeCamera.detachControl(this.canvas);\n        (this.scene.activeCamera as FreeCamera).speed = 0;\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 0;\n    }\n\n    /**\n     * Hides the story overlay (for the book) and re-enables camera controls.\n     */\n    private hideStoryOverlay(): void {\n        if (!this.overlayElement || !this.scene.activeCamera) return;\n\n        this.isOverlayActive = false;\n        this.overlayElement.style.opacity = '0';\n        this.prevPageBtn.style.display = 'none';\n        this.nextPageBtn.style.display = 'none';\n\n        // Save the current chapter index back to the specific book's property\n        if (this.currentActiveBook === 'book1') {\n            this.currentChapterIndex_book1 = this.activeChapterIndex;\n        } else if (this.currentActiveBook === 'book2') {\n            this.currentChapterIndex_book2 = this.activeChapterIndex;\n        }\n        this.currentActiveBook = null; // Reset active book tracking\n\n        // Use a timeout to hide visibility after the CSS transition\n        setTimeout(() => {\n            this.overlayElement.style.visibility = 'hidden';\n            // Re-enable interaction text if player is still near book\n            // This logic is now handled by setupGameLogic's continuous check, but a fallback is good.\n            if (this.isPlayerNearBook || this.isPlayerNearBook2) {\n                this.interactionTextElement.style.display = 'block';\n            }\n            // Re-enable character interaction text if player is near character and no other overlay is active\n            if ((this.isPlayerNearVampire || this.isPlayerNearWerewolf) && !this.isOverlayActive) {\n                this.characterInteractionTextElement.style.display = 'block';\n            }\n        }, 300); // Match CSS transition duration\n\n        // Re-enable camera controls\n        this.scene.activeCamera.attachControl(this.canvas, true);\n        (this.scene.activeCamera as FreeCamera).speed = this.cameraDefaultSpeed;\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 2000;\n    }\n\n    /**\n     * Displays the character speech overlay and disables camera controls.\n     * @param speechText The text to display in the speech bubble.\n     */\n    private showCharacterOverlay(speechText: string): void {\n        if (!this.characterOverlayElement || !this.characterSpeechContentElement || !this.scene.activeCamera) return;\n\n        this.isOverlayActive = true;\n        this.characterOverlayElement.style.visibility = 'visible';\n        this.characterOverlayElement.style.opacity = '1';\n        this.characterInteractionTextElement.style.display = 'none'; // Hide character interaction text\n        this.interactionTextElement.style.display = 'none'; // Hide book interaction text\n        this.characterSpeechContentElement.innerHTML = speechText; // Set the dynamic speech content\n\n        // Disable camera controls\n        this.scene.activeCamera.detachControl(this.canvas);\n        (this.scene.activeCamera as FreeCamera).speed = 0;\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 0;\n    }\n\n    /**\n     * Hides the character speech overlay and re-enables camera controls.\n     */\n    private hideCharacterOverlay(): void {\n        if (!this.characterOverlayElement || !this.scene.activeCamera) return;\n\n        this.isOverlayActive = false;\n        this.characterOverlayElement.style.opacity = '0';\n\n        // Use a timeout to hide visibility after the CSS transition\n        setTimeout(() => {\n            this.characterOverlayElement.style.visibility = 'hidden';\n            // Re-enable character interaction text if player is still near a character\n            if ((this.isPlayerNearVampire || this.isPlayerNearWerewolf) && !this.isOverlayActive) {\n                this.characterInteractionTextElement.style.display = 'block';\n            }\n            // Re-enable book interaction text if player is near book and no other overlay is active\n            if ((this.isPlayerNearBook || this.isPlayerNearBook2) && !this.isOverlayActive) {\n                this.interactionTextElement.style.display = 'block';\n            }\n        }, 300); // Match CSS transition duration\n\n        // Re-enable camera controls\n        this.scene.activeCamera.attachControl(this.canvas, true);\n        (this.scene.activeCamera as FreeCamera).speed = this.cameraDefaultSpeed;\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 2000;\n    }\n}\n","import {\r\n    Scene,\r\n    Engine,\r\n    FreeCamera,\r\n    Vector3,\r\n    SceneLoader,\r\n    AbstractMesh, // Still imported, though not directly used in the final version of this class\r\n    Mesh // Import Mesh for type assertion\r\n} from \"@babylonjs/core\";\r\nimport \"@babylonjs/loaders\";\r\n\r\nexport class QuizGame {\r\n    private scene: Scene; // Now receives the scene from outside\r\n    private engine: Engine; // Now receives the engine from outside\r\n    deskMesh!: Mesh; // To store the loaded desk mesh\r\n\r\n    // UI elements for quiz interaction\r\n    private quizInteractionTextElement: HTMLElement; // \"Click Q to start the Quiz!\"\r\n    private quizOverlayElement: HTMLElement;         // The main quiz overlay\r\n    private quizContentElement: HTMLElement;         // Contains question, options, feedback\r\n    private questionTextElement: HTMLElement;\r\n    private answerOptionsContainer: HTMLElement;\r\n    private answerButtons: HTMLButtonElement[];\r\n    private feedbackTextElement: HTMLElement;\r\n    private nextQuestionBtn: HTMLButtonElement;\r\n    private closeQuizBtn: HTMLButtonElement;\r\n\r\n    private isPlayerNearDesk = false;\r\n    private isQuizActive = false;\r\n    private quizInteractionDistance = 3.0; // Distance to trigger quiz interaction prompt\r\n    private cameraDefaultSpeed = 0.2; // Store camera speed to restore after quiz\r\n\r\n    private currentQuestionIndex = 0;\r\n    private quizData = [\r\n        {\r\n            question: \"1. Why does Bella move to Forks, Washington?\",\r\n            options: {\r\n                A: \"To attend a new school\",\r\n                B: \"To escape her past\",\r\n                C: \"To live with her father\",\r\n                D: \"To find the Cullens\"\r\n            },\r\n            correctAnswer: \"C\"\r\n        },\r\n        {\r\n            question: \"2. What makes the town of Forks feel mysterious in the story?\",\r\n            options: {\r\n                A: \"Its desert landscapes and heat\",\r\n                B: \"The large city atmosphere\",\r\n                C: \"The constant sunlight and clear skies\",\r\n                D: \"The forests and perpetual cloud cover\"\r\n            },\r\n            correctAnswer: \"D\"\r\n        },\r\n        {\r\n            question: \"3. How does Bella initially feel about her new school life in Forks?\",\r\n            options: {\r\n                A: \"Confident and popular\",\r\n                B: \"Disappointed and isolated\",\r\n                C: \"Excited and optimistic\",\r\n                D: \"Bored but accepting\"\r\n            },\r\n            correctAnswer: \"D\"\r\n        },\r\n        {\r\n            question: \"4. What about Edward Cullen draws Bella’s attention?\",\r\n            options: {\r\n                A: \"His mysterious behavior and unusual abilities\",\r\n                B: \"His high grades and leadership in sports\",\r\n                C: \"His musical talent and humor\",\r\n                D: \"His constant talking and friendliness\"\r\n            },\r\n            correctAnswer: \"A\"\r\n        },\r\n        {\r\n            question: \"5. Which theme is introduced as central to Twilight based on the summary?\",\r\n            options: {\r\n                A: \"Political conflict\",\r\n                B: \"Technology and innovation\",\r\n                C: \"Forbidden love and personal discovery\",\r\n                D: \"War and revenge\"\r\n            },\r\n            correctAnswer: \"C\"\r\n        }\r\n    ];\r\n\r\n    constructor(\r\n        scene: Scene, // Receive the scene from CustomLoading.ts\r\n        engine: Engine, // Receive the engine from CustomLoading.ts\r\n        quizInteractionTextElement: HTMLElement,\r\n        quizOverlayElement: HTMLElement,\r\n        quizContentElement: HTMLElement, // This will be the main container for question, options, feedback\r\n        answerButtons: HTMLButtonElement[],\r\n        feedbackTextElement: HTMLElement,\r\n        nextQuestionBtn: HTMLButtonElement,\r\n        closeQuizBtn: HTMLButtonElement\r\n    ) {\r\n        this.scene = scene; // Assign the passed scene\r\n        this.engine = engine; // Assign the passed engine\r\n\r\n        // Assign passed UI elements to class properties\r\n        this.quizInteractionTextElement = quizInteractionTextElement;\r\n        this.quizOverlayElement = quizOverlayElement;\r\n        this.quizContentElement = quizContentElement; // This is the parent for question/options\r\n        this.answerButtons = answerButtons;\r\n        this.feedbackTextElement = feedbackTextElement;\r\n        this.nextQuestionBtn = nextQuestionBtn;\r\n        this.closeQuizBtn = closeQuizBtn;\r\n\r\n        // Get direct references to the specific elements within quizContentElement\r\n        this.questionTextElement = quizContentElement.querySelector('#questionText') as HTMLElement;\r\n        this.answerOptionsContainer = quizContentElement.querySelector('#answerOptions') as HTMLElement;\r\n\r\n        // Load the desk and set up quiz UI/logic\r\n        this.CreateEnvironment().finally(() => {\r\n            this.setupGameUI();\r\n            this.setupGameLogic();\r\n        }).catch(error => {\r\n            console.error(\"Error during quiz environment creation:\", error);\r\n        });\r\n\r\n        // No need for its own render loop or resize listener here, CustomLoading (via BabylonExamples.vue) will handle it\r\n    }\r\n\r\n    /**\r\n     * Loads the desk.glb model into the scene.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async CreateDesk(): Promise<void> {\r\n        try {\r\n            const result = await SceneLoader.ImportMeshAsync(\r\n                \"\",\r\n                \"./models/\", // Assuming desk.glb is in your models folder\r\n                \"desk.glb\",\r\n                this.scene // Use the shared scene\r\n            );\r\n            // Assuming the first mesh is the primary desk mesh or its root\r\n            this.deskMesh = result.meshes[0] as Mesh;\r\n            this.deskMesh.rotation = new Vector3(0, 0, 0); \r\n            this.deskMesh.position = new Vector3(-5, 0, 2); // Position it for interaction (adjust as needed in your scene)\r\n            this.deskMesh.scaling = new Vector3(0.1, 0.1, 0.1); // Adjust scaling as needed\r\n            console.log(\"Loaded desk.glb:\", this.deskMesh.name);\r\n        } catch (error) {\r\n            console.error(\"Error loading desk.glb:\", error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Orchestrates the creation of the environment, specifically the desk.\r\n     */\r\n    public async CreateEnvironment(): Promise<void> {\r\n        await this.CreateDesk(); // Load the desk model\r\n    }\r\n\r\n    /**\r\n     * Sets up the HTML UI elements for interaction and quiz overlay.\r\n     */\r\n    private setupGameUI(): void {\r\n        this.quizInteractionTextElement.style.display = 'none';\r\n        this.quizOverlayElement.style.visibility = 'hidden';\r\n        this.quizOverlayElement.style.opacity = '0';\r\n        this.feedbackTextElement.textContent = ''; // Clear feedback initially\r\n        this.nextQuestionBtn.style.display = 'none'; // Hide next question button initially\r\n\r\n        // Attach event listeners for answer buttons\r\n        this.answerButtons.forEach(button => {\r\n            button.addEventListener('click', (event) => {\r\n                const selectedOption = (event.target as HTMLButtonElement).dataset.option as string;\r\n                this.checkAnswer(selectedOption);\r\n            });\r\n        });\r\n\r\n        // Attach event listener for Next Question button\r\n        this.nextQuestionBtn.addEventListener('click', () => this.nextQuestion());\r\n\r\n        // Attach event listener for Close Quiz button\r\n        this.closeQuizBtn.addEventListener('click', () => this.hideQuizOverlay());\r\n\r\n        // Display the first question\r\n        this.updateQuizContent();\r\n    }\r\n\r\n    /**\r\n     * Updates the quiz content with the current question and options.\r\n     */\r\n    private updateQuizContent(): void {\r\n        if (this.currentQuestionIndex < this.quizData.length) {\r\n            const currentQuizItem = this.quizData[this.currentQuestionIndex];\r\n            this.questionTextElement.textContent = currentQuizItem.question;\r\n            this.feedbackTextElement.textContent = ''; // Clear feedback for new question\r\n            this.nextQuestionBtn.style.display = 'none'; // Hide next button\r\n\r\n            // Reset answer button styles and content\r\n            this.answerButtons.forEach(button => {\r\n                const optionKey = button.dataset.option as keyof typeof currentQuizItem.options;\r\n                button.textContent = `${optionKey}. ${currentQuizItem.options[optionKey]}`;\r\n                button.classList.remove('correct', 'incorrect');\r\n                button.disabled = false; // Enable buttons for new question\r\n            });\r\n        } else {\r\n            // End of quiz\r\n            this.questionTextElement.textContent = \"Quiz Complete!\";\r\n            this.answerOptionsContainer.innerHTML = ''; // Clear options\r\n            this.feedbackTextElement.textContent = \"You've finished the quiz!\";\r\n            this.nextQuestionBtn.style.display = 'none';\r\n            this.closeQuizBtn.textContent = 'Close Quiz'; // Ensure close button is visible\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks the selected answer against the correct answer.\r\n     * @param selectedOption The option chosen by the player (e.g., 'A', 'B').\r\n     */\r\n    private checkAnswer(selectedOption: string): void {\r\n        const currentQuizItem = this.quizData[this.currentQuestionIndex];\r\n        if (!currentQuizItem) return;\r\n\r\n        // Disable all answer buttons after a selection\r\n        this.answerButtons.forEach(button => {\r\n            button.disabled = true;\r\n        });\r\n\r\n        if (selectedOption === currentQuizItem.correctAnswer) {\r\n            this.feedbackTextElement.textContent = \"Correct!\";\r\n            this.feedbackTextElement.style.color = '#28a745'; // Green\r\n            this.answerButtons.find(btn => btn.dataset.option === selectedOption)?.classList.add('correct');\r\n        } else {\r\n            this.feedbackTextElement.textContent = \"Incorrect. The correct answer is: \" + currentQuizItem.correctAnswer; // Show correct answer on incorrect\r\n            this.feedbackTextElement.style.color = '#dc3545'; // Red\r\n            // Fix: Use 'btn' from the find callback, not an undeclared 'button'\r\n            this.answerButtons.find(btn => btn.dataset.option === selectedOption)?.classList.add('incorrect');\r\n            // Highlight the correct answer\r\n            this.answerButtons.find(btn => btn.dataset.option === currentQuizItem.correctAnswer)?.classList.add('correct');\r\n        }\r\n\r\n        // Show next question button after answer, unless it's the last question\r\n        if (this.currentQuestionIndex < this.quizData.length - 1) {\r\n            this.nextQuestionBtn.style.display = 'block';\r\n        } else {\r\n            this.nextQuestionBtn.style.display = 'none'; // Hide if it's the last question\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Advances to the next question or finishes the quiz.\r\n     */\r\n    private nextQuestion(): void {\r\n        this.currentQuestionIndex++;\r\n        this.updateQuizContent();\r\n    }\r\n\r\n    /**\r\n     * Sets up the game logic loop for player-desk interaction.\r\n     */\r\n    private setupGameLogic(): void {\r\n        // Use the shared scene's onBeforeRenderObservable\r\n        this.scene.onBeforeRenderObservable.add(() => {\r\n            if (!this.deskMesh || !this.scene.activeCamera) {\r\n                return; // Ensure desk and camera exist\r\n            }\r\n\r\n            const cameraPosition = this.scene.activeCamera.position;\r\n            const deskPosition = this.deskMesh.position;\r\n            const distance = Vector3.Distance(cameraPosition, deskPosition);\r\n\r\n            if (distance < this.quizInteractionDistance) {\r\n                // Only show interaction text if the quiz is NOT active\r\n                if (!this.isPlayerNearDesk && !this.isQuizActive) {\r\n                    this.quizInteractionTextElement.style.display = 'block';\r\n                    this.isPlayerNearDesk = true;\r\n                }\r\n            } else {\r\n                if (this.isPlayerNearDesk && !this.isQuizActive) {\r\n                    this.quizInteractionTextElement.style.display = 'none';\r\n                    this.isPlayerNearDesk = false;\r\n                }\r\n            }\r\n\r\n            // Ensure interaction text is hidden when the quiz overlay IS active\r\n            if (this.isQuizActive) {\r\n                this.quizInteractionTextElement.style.display = 'none';\r\n            }\r\n        });\r\n\r\n        // Add keyboard event listener for 'Q' to open quiz\r\n        document.addEventListener('keydown', this.handleKeyPress.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Handles global key press events for quiz interactions.\r\n     * @param {KeyboardEvent} event The keyboard event.\r\n     */\r\n    private handleKeyPress(event: KeyboardEvent): void {\r\n        // Handle closing active overlay with 'Escape'\r\n        if (event.key === 'Escape') {\r\n            if (this.isQuizActive) {\r\n                this.hideQuizOverlay();\r\n                event.preventDefault();\r\n            }\r\n            return; // Prevent further processing\r\n        }\r\n\r\n        // Handle opening quiz with 'Q'\r\n        if (!this.isQuizActive && this.isPlayerNearDesk) {\r\n            if (event.key === 'q' || event.key === 'Q') {\r\n                this.showQuizOverlay();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Displays the quiz overlay and disables camera controls.\r\n     */\r\n    private showQuizOverlay(): void {\r\n        if (!this.quizOverlayElement || !this.scene.activeCamera) return;\r\n\r\n        this.isQuizActive = true;\r\n        this.quizOverlayElement.style.visibility = 'visible';\r\n        this.quizOverlayElement.style.opacity = '1';\r\n        this.quizInteractionTextElement.style.display = 'none'; // Hide prompt\r\n\r\n        // Reset quiz to first question when opened\r\n        this.currentQuestionIndex = 0;\r\n        this.updateQuizContent();\r\n\r\n        // Store current camera speed before disabling controls\r\n        this.cameraDefaultSpeed = (this.scene.activeCamera as FreeCamera).speed;\r\n        // Disable camera controls\r\n        this.scene.activeCamera.detachControl(); // Corrected: Call detachControl with no arguments\r\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 0;\r\n    }\r\n\r\n    /**\r\n     * Hides the quiz overlay and re-enables camera controls.\r\n     */\r\n    private hideQuizOverlay(): void {\r\n        if (!this.quizOverlayElement || !this.scene.activeCamera) return;\r\n\r\n        this.isQuizActive = false;\r\n        this.quizOverlayElement.style.opacity = '0';\r\n\r\n        // Use a timeout to hide visibility after the CSS transition\r\n        setTimeout(() => {\r\n            this.quizOverlayElement.style.visibility = 'hidden';\r\n            // Re-enable interaction text if player is still near desk\r\n            if (this.isPlayerNearDesk) {\r\n                 this.quizInteractionTextElement.style.display = 'block';\r\n            }\r\n        }, 300); // Match CSS transition duration\r\n\r\n        // Re-enable camera controls, restoring previous speed\r\n        this.scene.activeCamera.attachControl(this.scene.getEngine().getRenderingCanvas(), true);\r\n        (this.scene.activeCamera as FreeCamera).speed = this.cameraDefaultSpeed;\r\n        (this.scene.activeCamera as FreeCamera).angularSensibility = 2000;\r\n    }\r\n}\r\n\r\n","import { render } from \"./BabylonExamples.vue?vue&type=template&id=252e67ba&scoped=true&ts=true\"\nimport script from \"./BabylonExamples.vue?vue&type=script&lang=ts\"\nexport * from \"./BabylonExamples.vue?vue&type=script&lang=ts\"\n\nimport \"./BabylonExamples.vue?vue&type=style&index=0&id=252e67ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-252e67ba\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=2d34ead3&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2d34ead3&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktesting1\"] = self[\"webpackChunktesting1\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(21749); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_BabylonExamples","loadingBar","percentLoaded","loader","this","loadingUIBackgroundColor","loadingUIText","style","display","document","body","backgroundColor","width","innerText","console","log","id","setTimeout","status","percent","Math","round","canvas","setLoaded","interactionTextElement","overlayElement","storyContentElement","prevPageBtn","nextPageBtn","characterInteractionTextElement","characterOverlayElement","characterSpeechContentElement","engine","scene","CreateScene","cameraDefaultSpeed","activeCamera","speed","loadingScreen","CustomLoadingScreen","displayLoadingUI","setupGameUI","addEventListener","handleKeyPress","bind","prevPage","nextPage","CreateEnvironment","finally","hideLoadingUI","setupGameLogic","catch","error","camera","attachControl","envTex","CreateFromPrefilteredData","environmentTexture","createDefaultSkybox","environmentIntensity","pbr","albedoTexture","uScale","vScale","bumpTexture","invertNormalMapX","invertNormalMapY","useAmbientOcclusionFromMetallicTextureRed","useRoughnessFromMetallicTextureGreen","useMetallnessFromMetallicTextureBlue","roughness","ground","CreateGround","height","material","CreateGrass","Promise","ImportMeshAsync","meshes","length","position","scaling","result","models","bookMesh","rotation","name","book2Mesh","animationGroups","vampireMeshes","vampireAnimationGroups","play","warn","werewolfMeshes","werewolfAnimationGroups","updateLoadStatus","CreateRock","CreateLevelDesign","CreateBook","CreateBook2","CreateVampire","CreateWerewolf","CreateEnvironmentalLight","glowLayer","intensity","CreateLights","hemiLight","diffuse","groundColor","specular","pointLight","pointClone","clone","spotLight","PI","shadowEnabled","shadowMinZ","shadowMaxZ","shadowGen","useBlurCloseExponentialShadowMap","forEach","mesh","receiveShadows","addShadowCaster","visibility","opacity","activeStoryChapters","storyChapters_book1","activeChapterIndex","currentChapterIndex_book1","updateStoryContent","innerHTML","disabled","onBeforeRenderObservable","add","cameraPosition","distanceToBook1","Distance","distanceToBook2","isPlayerNearBook","bookInteractionDistance","isPlayerNearBook2","book2InteractionDistance","isOverlayActive","textContent","vampireRootMesh","werewolfRootMesh","distanceToVampire","distanceToWerewolf","isPlayerNearVampire","vampireInteractionDistance","isPlayerNearWerewolf","werewolfInteractionDistance","event","key","showStoryOverlay","preventDefault","Infinity","showCharacterOverlay","vampireSpeech","werewolfSpeech","hideStoryOverlay","hideCharacterOverlay","bookId","currentActiveBook","storyChapters_book2","currentChapterIndex_book2","detachControl","angularSensibility","speechText","quizInteractionTextElement","quizOverlayElement","quizContentElement","answerButtons","feedbackTextElement","nextQuestionBtn","closeQuizBtn","question","options","A","B","C","D","correctAnswer","questionTextElement","querySelector","answerOptionsContainer","deskMesh","CreateDesk","button","selectedOption","target","dataset","option","checkAnswer","nextQuestion","hideQuizOverlay","updateQuizContent","currentQuestionIndex","quizData","optionKey","classList","remove","currentQuizItem","color","find","btn","deskPosition","distance","quizInteractionDistance","isPlayerNearDesk","isQuizActive","showQuizOverlay","getEngine","getRenderingCanvas","data","loaded","mounted","getElementById","storyOverlay","storyContent","Array","from","querySelectorAll","customLoadingInstance","CustomLoading","sharedScene","sharedEngine","QuizGame","runRenderLoop","window","resize","methods","__exports__","components","BabylonExamples","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","i","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","push","__webpack_exports__"],"sourceRoot":""}